{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CameraView = _resolveComponent(\"CameraView\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.address = $event),\n    placeholder: \"Pi IP address\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.address]]), _createElementVNode(\"input\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.submit())\n  })]), _ctx.view ? (_openBlock(), _createBlock(_component_CameraView, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;;uBACEA,oBAQM,KARN,EAQM,IARN,EAQM,CAPJC,oBAKO,MALP,EAKO,IALP,EAKO,iBAJPA,oBAAuD,OAAvD,EAAuD;+DAAvCC,eAAOC,OAAgC;IAA9BC,WAAW,EAAC;EAAkB,CAAvD;;EAAA,kBAAgBF,eAIT,EAHPD,oBAEC,OAFD,EAEC;IADEI,OAAK,sCAAEH,aAAF;EACP,CAFD,CAGO,CALP,CAOI,EADcA,2BAAlBI,aAAyBC,qBAAzB,EAAyB;IAAAC;EAAA,CAAzB,sCACI,CARN","names":["_createElementBlock","_createElementVNode","_ctx","$event","placeholder","onClick","_createBlock","_component_CameraView","key"],"sourceRoot":"","sources":["/Users/qitaoweng/RTES/picar/DeepPicar-v3/web/client/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <form>\n    <input v-model=\"address\" placeholder=\"Pi IP address\" />\n    <input\n      @click=\"submit()\"\n    >\n    </form>\n    <CameraView v-if=\"view\"/>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport CameraView from '@/components/CameraView.vue'\nimport { ref } from 'vue'\nexport default {\n  name: 'HomeView',\n  components: {\n    CameraView\n  }\n}\nconst view = ref(false)\nconst address = ref('')\n\nconst submit = async () => {\n  view.value = true;\n  address.value = address;\n}\n\n</script>\n"]},"metadata":{},"sourceType":"module"}